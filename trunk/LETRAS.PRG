* ----------------------------------------------
* Programa : Letras.prg
* permite mostrar los n£meros en letras
* --------------------------------------------------------

# include "set.ch"

/* ***** CONVERTIR NUMEROS EN LETRAS **********
CLEAR
 DO WHILE .T.
 NUMERO = 0
@ 12,12 SAY "INDIQUE LA CIFRA..-> "GET NUMERO PICTURE "99999999999999"
READ
IF LASTKEY() = 27
   EXIT
ENDIF
*/

FUNCTION ENLETRAS
PARAMETER NUMERO,FILA,COL1,COL2
PRIVATE I,CADENA
I = 0

CADENA = ACOMODA(LETTER(m->numero),col2-col1)
DO WHILE .T.
	MUESTRA = LEFT(CADENA,AT("|",CADENA) - 1)
	CADENA = SUBSTR(CADENA,AT("|",CADENA) + 1)
	@ FILA + I,COL1 SAY MUESTRA
	I = I + 1
	IF AT("|",CADENA) = 0
		EXIT
	ENDIF
ENDDO
@ FILA + I - 1, COL1 + 1 SAY CADENA
RETURN []

FUNCTION LETTER
PARAMETERS XNUMERO

lFijos := SET( _SET_FIXED )
nDecimales := SET( _SET_DECIMALS )


PRIVATE GRUPOS[5],ENLETRA,GRUPO,NUMSTR,UNIDAD,DECENA,CENTENA,;
        UNI0,UNI1,UNI2,UNI3,UNI4,UNI5,UNI6,UNI7,UNI8,UNI9,DEC0,;
        DEC1,DEC2,DEC3,DEC4,DEC5,DEC6,DEC7,DEC8,DEC9,CEN0,;
        CEN1,CEN2,CEN3,CEN4,CEN5,CEN6,CEN7,CEN8,CEN9,DEC11,;
        DEC12,DEC13,DEC14,DEC15,DEC16,DEC17,DEC18,DEC19,;
        CONECT1,CONECT2,CONECT3,CONECT4,CONECT5,UNILET,DECLET,;
        CENLET,CONECTOR,GRUPOSTR
UNI0 = "IIF( XNUMERO = 0.AND.GRUPOS[1] = '1','CERO','')"
UNI1 = "IIF(DECENA = '1',DEC1&UNIDAD,IIF(GRUPOS[GRUPO] = '001'.AND.(GRUPO = 2.OR.GRUPO = 4),IIF(GRUPO>2,'UN ','UNO '),'UN '))"
UNI2 = "IIF(DECENA = '1',DEC1&UNIDAD,'DOS ')"
UNI3 = "IIF(DECENA = '1',DEC1&UNIDAD,'TRES ') "
UNI4 = "IIF(DECENA = '1',DEC1&UNIDAD,'CUATRO ')"
UNI5 = "IIF(DECENA = '1',DEC1&UNIDAD,'CINCO ')"
UNI6 = "IIF(DECENA = '1',DEC1&UNIDAD,'SEIS ')"
UNI7 = "IIF(DECENA = '1',DEC1&UNIDAD,'SIETE ')"
UNI8 = "IIF(DECENA = '1',DEC1&UNIDAD,'OCHO ')"
UNI9 = "IIF(DECENA = '1',DEC1&UNIDAD,'NUEVE ')"
DEC0 = "''" 
DEC1 = "IIF(UNIDAD ='0','DIEZ ','')"
DEC11 = "ONCE "
DEC12 = "DOCE "
DEC13 = "TRECE "
DEC14 = "CATORCE "
DEC15 = "QUINCE "
DEC16 = "DIECISEIS "
DEC17 = 'DIECISIETE '
DEC18 = 'DIECIOCHO '
DEC19 = 'DIECINUEVE '
DEC2 = "IIF(UNIDAD = '0','VEINTE ','VEINTI')"
DEC3 = "'TREINTA' + IIF(UNIDAD<>'0',' Y ',' ')"
DEC4 = "'CUARENTA'+IIF(UNIDAD<>'0',' Y ',' ')"
DEC5 = "'CINCUENTA' + IIF(UNIDAD<>'0',' Y ',' ')"
DEC6 = "'SESENTA' + IIF(UNIDAD<>'0',' Y ',' ')"
DEC7 = "'SETENTA' + IIF(UNIDAD<>'0',' Y ',' ')"
DEC8 = "'OCHENTA' + IIF(UNIDAD<>'0',' Y ',' ')"
DEC9 = "'NOVENTA' + IIF(UNIDAD<>'0',' Y ',' ')"
CEN0 = "''"
CEN1 = "IIF(DECENA + UNIDAD = '00','CIEN ','CIENTO ')"
CEN2 = "'DOCIENT' + IIF(GRUPO<3,'OS ','OS ')"
CEN3 = "'TRESCIENT' + IIF(GRUPO<3,'OS ','OS ')"
CEN4 = "'CUATROCIENT' + IIF(GRUPO<3,'OS ','OS ')"
CEN5 = "'QUINIENT' + IIF(GRUPO<3,'OS ','OS ')"
CEN6 = "'SEISCIENT' + IIF(GRUPO<3,'OS ','OS ')"
CEN7 = "'SETECIENT' + IIF(GRUPO<3,'OS ','OS ')"
CEN8 = "'OCHOCIENT' + IIF(GRUPO<3,'OS ','OS ')"
CEN9 = "'NOVECIENT' + IIF(GRUPO<3,'OS ','OS ')"
CONECT1 = "''"
CONECT2 = "IIF(GRUPOS[2]>'000','MIL ','')"
CONECT3 = "IIF(GRUPOS[3]>'000'.OR.GRUPOS[4]>'000',IIF(GRUPOS[3] = '001','MILLON ','MILLONES '),'')"
CONECT4 = "IIF(GRUPOS[4]>'000','MIL ','')"
CONECT5 = "IIF(GRUPOS[5]>'000',IIF(GRUPOS[5] = '001','BILLON ','BILLONES '),'')"
ENLETRA = ""
XNUMERO = INT( XNUMERO )
NUMSTR = ALLTRIM(STR( XNUMERO ))

*-CONVERSION A CARACTER DEL NUMERO JUSTIFICANDO CON 0 A LA IZQUIERDA
NUMSTR = REPLICATE('0',15-LEN(NUMSTR))+NUMSTR
FOR GRUPO = 1 TO 5
     GRUPOS[5-GRUPO+1] = SUBSTR(NUMSTR,(GRUPO-1)*3 + 1,3)
NEXT
*_PROCESO
FOR GRUPO = 5 TO 1 STEP -1
    UNIDAD = RIGHT(GRUPOS[GRUPO],1)
    DECENA = SUBSTR(GRUPOS[GRUPO],2,1)
    CENTENA = LEFT(GRUPOS[GRUPO],1)
    UNILET = UNI&UNIDAD
    DECLET = DEC&DECENA
    CENLET = CEN&CENTENA
    GRUPOSTR = STR(GRUPO,1)
    CONECTOR = CONECT&GRUPOSTR
    ENLETRA = ENLETRA+&CENLET+&DECLET+&UNILET+&CONECTOR
NEXT

SET( _SET_FIXED , lFijos )
SET( _SET_DECIMALS , nDecimales)

RETURN ENLETRA

FUNCTION ACOMODA
PARAMETER CONGUION,LARGO
PRIVATE CONTADOR,CONTROL,VECES
SINGUION = ''
CONTROL = 1
CONTADOR = 1

DO WHILE (CONTADOR <= LEN(CONGUION))
	IF CONTROL <= LARGO - 5
		IF SUBSTR(CONGUION,CONTADOR,1) <> "-"
			SINGUION = SINGUION + SUBSTR(CONGUION,CONTADOR,1)
			CONTROL = CONTROL + 1
			CONTADOR = CONTADOR + 1
		ELSE
			CONTADOR = CONTADOR + 1
		ENDIF
	ELSE
		CONTROL = 1
		VECES = 0
		DO WHILE .T.
			VECES = VECES + 1
			IF SUBSTR(CONGUION,CONTADOR,1) $ "- "
				SINGUION = SINGUION + SUBSTR(CONGUION,CONTADOR,1) + "|"
				CONTADOR = CONTADOR + 1
				EXIT
			ELSE 
				SINGUION = SINGUION + SUBSTR(CONGUION,CONTADOR,1)
				CONTADOR = CONTADOR + 1
			ENDIF
			IF VECES >= 5
				EXIT
			ENDIF
		ENDDO
	ENDIF
ENDDO

RETURN SINGUION

* --------------------------
FUNCTION PESOS2LETRA(NUMERO)
* --------------------------
local cEntero,cCentavos
cEntero := sacacar(LETTER(INT(M->NUMERO)),"-")
cCentavos := " con " + right(str(m->numero,10,2),2) + " centavos"
return cEntero + cCentavos

* -------------------------------
FUNCTION sacacar(cadena,caracter)
* -------------------------------
local contador,limpia
limpia = space(0)

for contador = 1 to len(cadena)
	if substr(cadena,contador,1) != caracter
		limpia = limpia + substr(cadena,contador,1)
	endif
next contador
return limpia
